/*!
 * Scripts-Loader JavaScript Library v1.1.0
 * https://github.com/Mubarrat/scripts-loader/
 * 
 * Released under the MIT license
 * https://github.com/Mubarrat/scripts-loader/blob/main/LICENSE
 */
"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,s){return new(r||(r=Promise))((function(n,o){function a(e){try{i(s.next(e))}catch(e){o(e)}}function c(e){try{i(s.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,c)}i((s=s.apply(e,t||[])).next())}))};function detectFormatXmlOrJson(e){switch(e.trim().charAt(0)){case"<":try{return(new DOMParser).parseFromString(e,"text/xml"),"xml"}catch(e){return""}case"{":case"[":try{return JSON.parse(e),"json"}catch(e){return""}default:return""}}function loadScript(e,t){switch(t){case"document":for(const t of e)if(0!==t.sources.length)if(t.dependencies.length>0){const s=(new Array).concat(...t.dependencies.map((t=>{const r=e.find((e=>e.name===t));return r?r.promises:Promise.resolve()})));Promise.all(t.promises=t.promises.concat(...s)).then((e=>r([...t.sources])),console.error).catch(console.error)}else t.promises=t.promises.concat(r([...t.sources]));break;case"ajax":for(const t of e)if(0!==t.sources.length)if(t.dependencies.length>0){const r=(new Array).concat(...t.dependencies.map((t=>{const r=e.find((e=>e.name===t));return r?r.promises:Promise.resolve()})));Promise.all(t.promises=t.promises.concat(...r)).then((e=>s([...t.sources])),console.error).catch(console.error)}else t.promises=t.promises.concat(s([...t.sources]));break;case"fetch":for(const t of e)if(0!==t.sources.length)if(t.dependencies.length>0){const r=(new Array).concat(...t.dependencies.map((t=>{const r=e.find((e=>e.name===t));return r?r.promises:Promise.resolve()})));Promise.all(t.promises=t.promises.concat(...r)).then((e=>n([...t.sources])),console.error).catch(console.error)}else t.promises=t.promises.concat(n([...t.sources]));break;default:throw new Error('`renderer` is either be "document" or "ajax" or "fetch"')}function r(e){return new Promise(((t,s)=>{if(0===e.length)return void s("All sources failed.");const n=document.createElement("script");n.type="text/javascript",n.src=e.shift(),n.onload=()=>t(),n.onerror=()=>r(e).then(t).catch(s),document.head.appendChild(n)}))}function s(e){return new Promise(((t,s)=>{if(0===e.length)return void s("All sources failed.");const n=new XMLHttpRequest;n.open("GET",e.shift()),n.onreadystatechange=function(){n.readyState===XMLHttpRequest.DONE&&(200===n.status?(new Function(n.responseText)(),t()):r(e).then(t).catch(s))},n.send()}))}function n(e){return new Promise(((t,s)=>{0!==e.length?fetch(e.shift()).then((e=>{e.text().then((e=>{try{new Function(e)()}catch(e){console.error(e)}t()}))})).catch((n=>{r(e).then(t).catch(s)})):s("All sources failed.")}))}}class ScriptArray extends Array{constructor(...e){if(!Array.isArray(e))throw new Error("`array` isn't array");if(!e.every((e=>e instanceof ScriptObject)))throw new Error("Every item of `array` isn't an instance of ScriptObject");super(...e)}add(e){return this.push(e)}get names(){return this.map((e=>e.name))}}class ScriptObject{constructor(){this.name="",this.sources=[],this.dependencies=[],this.promises=[]}}const $ls=Object.assign((e=>{if("string"!=typeof e&&!Array.isArray(e))throw new Error("`data` should be either string or an object array.");if("string"==typeof e)switch(detectFormatXmlOrJson(e)){case"xml":$ls.xml(e);break;case"json":$ls.json(e);break;default:throw new Error("Unknown type")}else $ls.document(e)}),{xml:Object.assign((e=>{if("string"!=typeof e)throw new Error("data should be string");$ls.xml.document(e)}),{document(e){if("string"!=typeof e)throw new Error("data should be string");loadScript(validateXmlAsScriptArray(e),"document")},ajax(e){if("string"!=typeof e)throw new Error("data should be string");loadScript(validateXmlAsScriptArray(e),"ajax")},fetch(e){if("string"!=typeof e)throw new Error("data should be string");loadScript(validateXmlAsScriptArray(e),"fetch")}}),json:Object.assign((e=>{if("string"!=typeof e)throw new Error("data should be string");$ls.json.document(e)}),{document(e){if("string"!=typeof e)throw new Error("data should be string");loadScript(validateJsonAsScriptArray(e),"document")},ajax(e){if("string"!=typeof e)throw new Error("data should be string");loadScript(validateJsonAsScriptArray(e),"ajax")},fetch(e){if("string"!=typeof e)throw new Error("data should be string");loadScript(validateJsonAsScriptArray(e),"fetch")}}),document(e){if("string"!=typeof e&&!Array.isArray(e))throw new Error("`data` should be either string or an object array.");if("string"==typeof e)switch(detectFormatXmlOrJson(e)){case"xml":$ls.xml.document(e);break;case"json":$ls.json.document(e);break;default:throw new Error("Unknown type")}else loadScript(validateAsScriptArray(e),"document")},ajax(e){if("string"!=typeof e&&!Array.isArray(e))throw new Error("`data` should be either string or an object array.");if("string"==typeof e)switch(detectFormatXmlOrJson(e)){case"xml":$ls.xml.ajax(e);break;case"json":$ls.json.ajax(e);break;default:throw new Error("Unknown type")}else loadScript(validateAsScriptArray(e),"ajax")},fetch(e){if("string"!=typeof e&&!Array.isArray(e))throw new Error("`data` should be either string or an object array.");if("string"==typeof e)switch(detectFormatXmlOrJson(e)){case"xml":$ls.xml.fetch(e);break;case"json":$ls.json.fetch(e);break;default:throw new Error("Unknown type")}else loadScript(validateAsScriptArray(e),"fetch")},url:Object.assign(((e,t="fetch")=>{if("string"!=typeof e)throw new Error("url must be string");if("ajax"!=t&&"fetch"!=t)throw new Error('mode must be either "ajax" or "fetch"');$ls.url.document(e,t)}),{document(e,t="fetch"){return __awaiter(this,void 0,void 0,(function*(){switch(t){case"ajax":const t=new XMLHttpRequest;t.open("GET",e),t.onreadystatechange=()=>t.readyState==XMLHttpRequest.DONE&&200==t.status&&$ls.document(t.responseText),t.send();break;case"fetch":fetch(e).then((e=>e.text())).then((e=>$ls.document(e)));break;default:throw new Error('Loading mode can either be "ajax" or "fetch"')}}))},ajax(e,t="fetch"){return __awaiter(this,void 0,void 0,(function*(){switch(t){case"ajax":const t=new XMLHttpRequest;t.open("GET",e),t.onreadystatechange=()=>t.readyState==XMLHttpRequest.DONE&&200==t.status&&$ls.ajax(t.responseText),t.send();break;case"fetch":fetch(e).then((e=>e.text())).then((e=>$ls.ajax(e)));break;default:throw new Error('Loading mode can either be "ajax" or "fetch"')}}))},fetch(e,t="fetch"){switch(t){case"ajax":const t=new XMLHttpRequest;t.open("GET",e),t.onreadystatechange=()=>t.readyState==XMLHttpRequest.DONE&&200==t.status&&$ls.fetch(t.responseText),t.send();break;case"fetch":fetch(e).then((e=>e.text())).then((e=>$ls.fetch(e)));break;default:throw new Error('Loading mode can either be "ajax" or "fetch"')}}})});function validateAsScriptArray(e){if(!Array.isArray(e))throw new Error("Root element should be an array");return new ScriptArray(...e.map((e=>{if("object"!=typeof e||Array.isArray(e))throw new Error("Items should be objects");const t=Object.keys(e).length;if(t<1||t>3)throw new Error("Items should have from 1 to 3 attributes");const{name:r,source:s,sources:n,dependency:o,dependencies:a}=e;if(!s&&!n)throw new Error("Attributes source(s) are required");if(s&&n)throw new Error("source and sources both are defined");return Object.assign(new ScriptObject,{name:r||"",sources:n||(s?[s]:[]),dependencies:a||(o?[o]:[])})})))}function validateJsonAsScriptArray(e){if("string"!=typeof e)throw new Error("`data` isn't string");return validateAsScriptArray(JSON.parse(e))}function validateXmlAsScriptArray(e){const t=(new DOMParser).parseFromString(e,"text/xml"),r="http://schemas.mubarrat.com/scripts-loader/";return validateAsScriptArray([...t.getElementsByTagNameNS(r,"script")].map((e=>({name:e.getAttribute("name"),sources:[...e.getElementsByTagNameNS(r,"source")].map((e=>e.textContent)),dependencies:[...e.getElementsByTagNameNS(r,"dependency")].map((e=>e.textContent))}))))}
//# sourceMappingURL=scripts-loader.min.js.map